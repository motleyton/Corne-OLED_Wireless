/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        dance_D: dance_D {
            compatible = "zmk,behavior-tap-dance";
            label = "DANCE_D";
            #binding-cells = <0>;
            bindings = <&kp LS(D)>, <&kp LC(D)>;
        };

        dance_Z: dance_Z {
            compatible = "zmk,behavior-tap-dance";
            label = "DANCE_Z";
            #binding-cells = <0>;
            bindings = <&kp LS(Z)>, <&kp LC(Z)>;
        };

        dance_C: dance_C {
            compatible = "zmk,behavior-tap-dance";
            label = "DANCE_C";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>, <&kp LS(LC(C))>;
        };

        dance_V: dance_V {
            compatible = "zmk,behavior-tap-dance";
            label = "DANCE_V";
            #binding-cells = <0>;
            bindings = <&kp LC(V)>, <&kp LS(LC(V))>;
        };

        dance_: dance_ {
            compatible = "zmk,behavior-tap-dance";
            label = "DANCE_";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        step_over_out: step_over_out {
            compatible = "zmk,behavior-tap-dance";
            label = "STEP_OVER_OUT";
            #binding-cells = <0>;
            bindings = <&kp F8>, <&kp LS(F8)>;
        };

        step_into_intomycode: step_into_intomycode {
            compatible = "zmk,behavior-tap-dance";
            label = "STEP_INTO_INTOMYCODE";
            #binding-cells = <0>;
            bindings = <&kp F7>, <&kp LA(LS(F7))>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE            &kp Q  &kp W  &kp E                &kp R      &kp T        &kp Y         &kp U      &kp I          &kp O    &kp P     &dance_
&kp LEFT_SHIFT       &kp A  &kp S  &kp D                &kp F      &kp G        &kp H         &kp J      &kp K          &kp L    &kp SEMI  &kp SQT
&mt LCTRL LG(SPACE)  &kp Z  &kp X  &kp C                &kp V      &kp B        &kp N         &kp M      &kp COMMA      &kp DOT  &kp FSLH  &kp NON_US_BACKSLASH
                                   &mt LEFT_ALT DELETE  &kp SPACE  &lt 2 TAB    &lt 1 ESCAPE  &kp ENTER  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none           &none   &none           &none                  &kp LS(F10)  &kp LA(NUMBER_1)    &none         &kp N7        &kp N8        &kp N9        &none   &none
&kp LEFT_SHIFT  &kp F8  &step_over_out  &step_into_intomycode  &kp LS(F9)   &kp LA(N0)          &none         &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans  &trans
&none           &trans  &trans          &trans                 &kp LC(F2)   &kp LA(F12)         &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &tog 3
                                        &kp LGUI               &trans       &none               &trans        &trans        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB         &kp EXCL  &kp AT  &kp HASH  &kp DLLR          &kp PRCNT            &kp CARET       &kp AMPS        &kp ASTRK     &kp LPAR         &kp RPAR  &kp MINUS
&kp LEFT_SHIFT  &trans    &trans  &trans    &kp LC(LA(LEFT))  &kp LC(LA(RIGHT))    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp BSLH  &kp EQUAL
&kp F1          &kp F2    &kp F3  &kp F4    &kp F5            &kp F6               &kp F7          &kp F8          &kp F9        &kp F10          &kp F11   &kp F12
                                  &kp LGUI  &kp SPACE         &trans               &kp RET         &trans          &kp RALT
            >;
        };

        autocad {
            bindings = <
&kp ESCAPE  &kp LS(Q)  &kp W      &kp LS(E)  &kp LS(R)  &kp LS(T)    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none       &kp LS(A)  &kp LS(S)  &dance_D   &kp LS(F)  &none        &none       &none         &none         &none         &none         &none
&none       &dance_Z   &kp LS(X)  &dance_C   &dance_V   &none        &none       &none         &none         &none         &none         &tog 3
                                  &none      &none      &none        &none       &none         &none
            >;
        };
    };
};
